#############################################################################
# Makefile for building: ubuntu-keyboard
# Generated by qmake (3.1) (Qt 5.9.5)
# Project:  ubuntu-keyboard.pro
# Template: subdirs
# Command: /usr/lib/x86_64-linux-gnu/qt5/arm-linux-gnueabihf/bin/qmake -o Makefile ubuntu-keyboard.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin
#############################################################################

MAKEFILE      = Makefile

first: make_first
QMAKE         = /usr/lib/x86_64-linux-gnu/qt5/arm-linux-gnueabihf/bin/qmake
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = cp -f -R
QINSTALL      = /usr/lib/x86_64-linux-gnu/qt5/arm-linux-gnueabihf/bin/qmake -install qinstall
QINSTALL_PROGRAM = /usr/lib/x86_64-linux-gnu/qt5/arm-linux-gnueabihf/bin/qmake -install qinstall -exe
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
TAR           = tar -cf
COMPRESS      = gzip -9f
DISTNAME      = ubuntu-keyboard1.0.0
DISTDIR = /home/kugi_igi/ubuntu-keyboard/.tmp/ubuntu-keyboard1.0.0
SUBTARGETS    =  \
		sub-src \
		sub-data \
		sub-qml \
		sub-plugins \
		sub-po \
		test


sub-src-qmake_all:  FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin
	cd src/ && $(MAKE) -f Makefile qmake_all
sub-src: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile
sub-src-make_first-ordered: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-src-make_first: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-src-all-ordered: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-src-all: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-src-clean-ordered: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-src-clean: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-src-distclean-ordered: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-src-distclean: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-src-install_subtargets-ordered: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-src-install_subtargets: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-src-uninstall_subtargets-ordered: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
sub-src-uninstall_subtargets: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
sub-data-qmake_all: sub-src-qmake_all FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin
	cd data/ && $(MAKE) -f Makefile qmake_all
sub-data: FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile
sub-data-make_first-ordered: sub-src-make_first-ordered  FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-data-make_first: FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-data-all-ordered: sub-src-all-ordered  FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-data-all: FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-data-clean-ordered: sub-src-clean-ordered  FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-data-clean: FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-data-distclean-ordered: sub-src-distclean-ordered  FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-data-distclean: FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-data-install_subtargets-ordered: sub-src-install_subtargets-ordered  FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-data-install_subtargets: FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-data-uninstall_subtargets-ordered: sub-src-uninstall_subtargets-ordered  FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
sub-data-uninstall_subtargets: FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
sub-qml-qmake_all: sub-data-qmake_all FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin
	cd qml/ && $(MAKE) -f Makefile qmake_all
sub-qml: FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile
sub-qml-make_first-ordered: sub-data-make_first-ordered  FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-qml-make_first: FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-qml-all-ordered: sub-data-all-ordered  FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-qml-all: FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-qml-clean-ordered: sub-data-clean-ordered  FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-qml-clean: FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-qml-distclean-ordered: sub-data-distclean-ordered  FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-qml-distclean: FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-qml-install_subtargets-ordered: sub-data-install_subtargets-ordered  FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-qml-install_subtargets: FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-qml-uninstall_subtargets-ordered: sub-data-uninstall_subtargets-ordered  FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
sub-qml-uninstall_subtargets: FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
sub-plugins-qmake_all: sub-qml-qmake_all FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin
	cd plugins/ && $(MAKE) -f Makefile qmake_all
sub-plugins: FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile
sub-plugins-make_first-ordered: sub-qml-make_first-ordered  FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-plugins-make_first: FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-plugins-all-ordered: sub-qml-all-ordered  FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-plugins-all: FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-plugins-clean-ordered: sub-qml-clean-ordered  FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-plugins-clean: FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-plugins-distclean-ordered: sub-qml-distclean-ordered  FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-plugins-distclean: FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-plugins-install_subtargets-ordered: sub-qml-install_subtargets-ordered  FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-plugins-install_subtargets: FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-plugins-uninstall_subtargets-ordered: sub-qml-uninstall_subtargets-ordered  FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
sub-plugins-uninstall_subtargets: FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
sub-po-qmake_all: sub-plugins-qmake_all FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin
	cd po/ && $(MAKE) -f Makefile qmake_all
sub-po: FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile
sub-po-make_first-ordered: sub-plugins-make_first-ordered  FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-po-make_first: FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
sub-po-all-ordered: sub-plugins-all-ordered  FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-po-all: FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
sub-po-clean-ordered: sub-plugins-clean-ordered  FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-po-clean: FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
sub-po-distclean-ordered: sub-plugins-distclean-ordered  FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-po-distclean: FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
sub-po-install_subtargets-ordered: sub-plugins-install_subtargets-ordered  FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-po-install_subtargets: FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
sub-po-uninstall_subtargets-ordered: sub-plugins-uninstall_subtargets-ordered  FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
sub-po-uninstall_subtargets: FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
test-qmake_all: sub-po-qmake_all FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin
	cd tests/ && $(MAKE) -f Makefile qmake_all
test: FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile
test-make_first-ordered: sub-po-make_first-ordered  FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
test-make_first: FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile 
test-all-ordered: sub-po-all-ordered  FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
test-all: FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile all
test-clean-ordered: sub-po-clean-ordered  FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
test-clean: FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile clean
test-distclean-ordered: sub-po-distclean-ordered  FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
test-distclean: FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile distclean
test-install_subtargets-ordered: sub-po-install_subtargets-ordered  FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
test-install_subtargets: FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile install
test-uninstall_subtargets-ordered: sub-po-uninstall_subtargets-ordered  FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall
test-uninstall_subtargets: FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile uninstall

Makefile: ubuntu-keyboard.pro /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/ubuntu-arm-gnueabihf-g++/qmake.conf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/spec_pre.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/unix.conf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/linux.conf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/sanitize.conf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/gcc-base.conf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/gcc-base-unix.conf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/g++-base.conf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/g++-unix.conf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/qconfig.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_Kirigami2.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3danimation.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dcore.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dextras.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dinput.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dlogic.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquick.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickanimation.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickextras.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickinput.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickrender.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickscene2d.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3drender.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_accessibility_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_bluetooth.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_bluetooth_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_concurrent_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_contacts.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_core.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_core_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_dbus.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_dbus_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_designer.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_devicediscovery_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_egl_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_eglfs_kms_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_eglfsdeviceintegration_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_fb_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_fontdatabase_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_gui.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_gui_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_help.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_input_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_kms_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_linuxaccessibility_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_location.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_multimedia.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_multimediawidgets.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_network.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_network_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_nfc.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_nfc_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_opengl.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_opengl_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_openglextensions.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_openglextensions_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_organizer.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_packetprotocol_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_platformcompositor_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_printsupport_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qml.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qml_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmldebug_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmldevtools_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmltest.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmltest_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quick.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quick_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quickparticles_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quickwidgets.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quickwidgets_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_script.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_scripttools.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_sensors.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_service_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_sql.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_sql_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_svg.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_testlib.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_testlib_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_theme_support_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_uiplugin.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_uitools.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_versit.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_versitorganizer.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_websockets.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_widgets.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_widgets_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xml.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xml_private.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xmlpatterns.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/qt_functions.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/qt_config.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/ubuntu-arm-gnueabihf-g++/qmake.conf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/spec_post.prf \
		.qmake.stash \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/exclusive_builds.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/toolchain.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/default_pre.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/maliit-defines.prf \
		config.pri \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/resolve_config.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/default_post.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/link_pkgconfig.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/maliit-plugins.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/maliit-framework.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/warn_on.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/qmake_use.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/file_copies.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/testcase_targets.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/exceptions.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/yacc.prf \
		/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/lex.prf \
		ubuntu-keyboard.pro
	$(QMAKE) -o Makefile ubuntu-keyboard.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/spec_pre.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/unix.conf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/linux.conf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/sanitize.conf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/gcc-base.conf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/gcc-base-unix.conf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/g++-base.conf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/g++-unix.conf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/qconfig.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_Kirigami2.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3danimation.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dcore.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dextras.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dinput.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dlogic.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquick.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickanimation.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickextras.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickinput.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickrender.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickscene2d.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3drender.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_accessibility_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_bluetooth.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_bluetooth_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_concurrent.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_concurrent_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_contacts.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_core.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_core_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_dbus.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_dbus_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_designer.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_devicediscovery_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_egl_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_eglfs_kms_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_eglfsdeviceintegration_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_fb_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_fontdatabase_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_gui.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_gui_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_help.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_input_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_kms_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_linuxaccessibility_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_location.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_multimedia.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_multimediawidgets.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_network.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_network_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_nfc.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_nfc_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_opengl.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_opengl_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_openglextensions.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_openglextensions_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_organizer.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_packetprotocol_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_platformcompositor_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_printsupport.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_printsupport_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qml.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qml_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmldebug_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmldevtools_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmltest.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmltest_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quick.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quick_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quickparticles_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quickwidgets.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quickwidgets_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_script.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_scripttools.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_sensors.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_service_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_sql.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_sql_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_svg.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_testlib.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_testlib_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_theme_support_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_uiplugin.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_uitools.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_versit.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_versitorganizer.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_websockets.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_widgets.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_widgets_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xml.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xml_private.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xmlpatterns.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/qt_functions.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/qt_config.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/ubuntu-arm-gnueabihf-g++/qmake.conf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/spec_post.prf:
.qmake.stash:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/exclusive_builds.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/toolchain.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/default_pre.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/maliit-defines.prf:
config.pri:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/resolve_config.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/default_post.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/link_pkgconfig.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/maliit-plugins.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/maliit-framework.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/warn_on.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/qmake_use.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/file_copies.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/testcase_targets.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/exceptions.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/yacc.prf:
/usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/lex.prf:
ubuntu-keyboard.pro:
qmake: FORCE
	@$(QMAKE) -o Makefile ubuntu-keyboard.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin

qmake_all: sub-src-qmake_all sub-data-qmake_all sub-qml-qmake_all sub-plugins-qmake_all sub-po-qmake_all test-qmake_all FORCE

make_first: sub-src-make_first-ordered sub-data-make_first-ordered sub-qml-make_first-ordered sub-plugins-make_first-ordered sub-po-make_first-ordered test-make_first-ordered  FORCE
all: sub-src-all-ordered sub-data-all-ordered sub-qml-all-ordered sub-plugins-all-ordered sub-po-all-ordered test-all-ordered  FORCE
clean: sub-src-clean-ordered sub-data-clean-ordered sub-qml-clean-ordered sub-plugins-clean-ordered sub-po-clean-ordered test-clean-ordered  FORCE
distclean: sub-src-distclean-ordered sub-data-distclean-ordered sub-qml-distclean-ordered sub-plugins-distclean-ordered sub-po-distclean-ordered test-distclean-ordered  FORCE
	-$(DEL_FILE) Makefile
	-$(DEL_FILE) .qmake.stash
install_subtargets: sub-src-install_subtargets-ordered sub-data-install_subtargets-ordered sub-qml-install_subtargets-ordered sub-plugins-install_subtargets-ordered sub-po-install_subtargets-ordered test-install_subtargets-ordered FORCE
uninstall_subtargets: sub-src-uninstall_subtargets-ordered sub-data-uninstall_subtargets-ordered sub-qml-uninstall_subtargets-ordered sub-plugins-uninstall_subtargets-ordered sub-po-uninstall_subtargets-ordered test-uninstall_subtargets-ordered FORCE

dist:
	git archive HEAD --prefix=ubuntu-keyboard-0.1/ | bzip2 > /home/kugi_igi/ubuntu-keyboard/ubuntu-keyboard-0.1.tar.bz2; md5sum /home/kugi_igi/ubuntu-keyboard/ubuntu-keyboard-0.1.tar.bz2 | cut -d ' ' -f 1 > /home/kugi_igi/ubuntu-keyboard/ubuntu-keyboard-0.1\.md5

sub-src-check_ordered:
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile check
sub-data-check_ordered: sub-src-check_ordered 
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile check
sub-qml-check_ordered: sub-data-check_ordered 
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile check
sub-plugins-check_ordered: sub-qml-check_ordered 
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile check
sub-po-check_ordered: sub-plugins-check_ordered 
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile check
test-check_ordered: sub-po-check_ordered 
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile check
check: sub-src-check_ordered sub-data-check_ordered sub-qml-check_ordered sub-plugins-check_ordered sub-po-check_ordered test-check_ordered

coverage:
	$(MKDIR) coverage-build && cd coverage-build && $(QMAKE) -r PREFIX="/usr" LIBDIR="/usr/lib" MALIIT_DEFAULT_PROFILE="ubuntu" HUNSPELL_DICT_PATH="/usr/share/hunspell" CONFIG+=debug CONFIG+=nodoc CONFIG+=no-werror CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin LIBS+="" INCLUDEPATH+="" LIBS+=-lgcov QMAKE_CXXFLAGS_DEBUG+="-fprofile-arcs -ftest-coverage" QMAKE_LFLAGS_DEBUG+="-fprofile-arcs -ftest-coverage" /home/kugi_igi/ubuntu-keyboard/maliit-plugin-ubuntu.pro.coverage && make $(MAKEFLAGS) coverage

test:

sub-src-benchmark_ordered:
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile benchmark
sub-data-benchmark_ordered: sub-src-benchmark_ordered 
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile benchmark
sub-qml-benchmark_ordered: sub-data-benchmark_ordered 
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile benchmark
sub-plugins-benchmark_ordered: sub-qml-benchmark_ordered 
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile benchmark
sub-po-benchmark_ordered: sub-plugins-benchmark_ordered 
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile benchmark
test-benchmark_ordered: sub-po-benchmark_ordered 
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -f Makefile benchmark
benchmark: sub-src-benchmark_ordered sub-data-benchmark_ordered sub-qml-benchmark_ordered sub-plugins-benchmark_ordered sub-po-benchmark_ordered test-benchmark_ordered
install:install_subtargets  FORCE

uninstall: uninstall_subtargets FORCE

FORCE:

dist: distdir FORCE
	(cd `dirname $(DISTDIR)` && $(TAR) $(DISTNAME).tar $(DISTNAME) && $(COMPRESS) $(DISTNAME).tar) && $(MOVE) `dirname $(DISTDIR)`/$(DISTNAME).tar.gz . && $(DEL_FILE) -r $(DISTDIR)

distdir: sub-src-distdir sub-data-distdir sub-qml-distdir sub-plugins-distdir sub-po-distdir test-distdir FORCE
	@test -d $(DISTDIR) || mkdir -p $(DISTDIR)
	$(COPY_FILE) --parents /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/spec_pre.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/unix.conf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/linux.conf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/sanitize.conf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/gcc-base.conf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/gcc-base-unix.conf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/g++-base.conf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/common/g++-unix.conf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/qconfig.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_Kirigami2.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3danimation.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dcore.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dextras.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dinput.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dlogic.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquick.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickanimation.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickextras.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickinput.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickrender.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3dquickscene2d.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_3drender.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_accessibility_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_bluetooth.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_bluetooth_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_bootstrap_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_concurrent.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_concurrent_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_contacts.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_core.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_core_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_dbus.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_dbus_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_designer.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_devicediscovery_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_egl_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_eglfs_kms_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_eglfsdeviceintegration_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_eventdispatcher_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_fb_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_fontdatabase_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_gui.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_gui_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_help.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_input_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_kms_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_linuxaccessibility_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_location.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_multimedia.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_multimediawidgets.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_network.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_network_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_nfc.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_nfc_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_opengl.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_opengl_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_openglextensions.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_openglextensions_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_organizer.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_packetprotocol_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_platformcompositor_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_printsupport.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_printsupport_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qml.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qml_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmldebug_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmldevtools_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmltest.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_qmltest_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quick.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quick_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quickparticles_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quickwidgets.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_quickwidgets_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_script.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_scripttools.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_sensors.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_service_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_sql.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_sql_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_svg.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_testlib.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_testlib_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_theme_support_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_uiplugin.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_uitools.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_versit.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_versitorganizer.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_websockets.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_widgets.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_widgets_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xml.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xml_private.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/modules/qt_lib_xmlpatterns.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/qt_functions.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/qt_config.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/ubuntu-arm-gnueabihf-g++/qmake.conf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/spec_post.prf .qmake.stash /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/exclusive_builds.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/toolchain.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/default_pre.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/maliit-defines.prf config.pri /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/resolve_config.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/default_post.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/link_pkgconfig.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/maliit-plugins.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/maliit-framework.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/warn_on.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/qmake_use.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/file_copies.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/testcase_targets.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/exceptions.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/yacc.prf /usr/lib/arm-linux-gnueabihf/qt5/mkspecs/features/lex.prf ubuntu-keyboard.pro $(DISTDIR)/

sub-src-distdir: FORCE
	@test -d src/ || mkdir -p src/
	cd src/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/src/src.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -e -f Makefile distdir DISTDIR=$(DISTDIR)/src

sub-data-distdir: FORCE
	@test -d data/ || mkdir -p data/
	cd data/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/data/data.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -e -f Makefile distdir DISTDIR=$(DISTDIR)/data

sub-qml-distdir: FORCE
	@test -d qml/ || mkdir -p qml/
	cd qml/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/qml/qml.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -e -f Makefile distdir DISTDIR=$(DISTDIR)/qml

sub-plugins-distdir: FORCE
	@test -d plugins/ || mkdir -p plugins/
	cd plugins/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/plugins/plugins.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -e -f Makefile distdir DISTDIR=$(DISTDIR)/plugins

sub-po-distdir: FORCE
	@test -d po/ || mkdir -p po/
	cd po/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/po/po.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -e -f Makefile distdir DISTDIR=$(DISTDIR)/po

test-distdir: FORCE
	@test -d tests/ || mkdir -p tests/
	cd tests/ && ( test -e Makefile || $(QMAKE) -o Makefile /home/kugi_igi/ubuntu-keyboard/tests/tests.pro -nocache 'QMAKE_CFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_RELEASE=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_CXXFLAGS_DEBUG=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' 'QMAKE_LFLAGS_RELEASE=-Wl,-Bsymbolic-functions -Wl,-z,relro' 'QMAKE_LFLAGS_DEBUG=-Wl,-Bsymbolic-functions -Wl,-z,relro' QMAKE_STRIP=: PREFIX=/usr MALIIT_DEFAULT_PROFILE=ubuntu CONFIG+=debug CONFIG+=nodoc CONFIG+=enable-presage CONFIG+=enable-hunspell CONFIG+=enable-pinyin ) && $(MAKE) -e -f Makefile distdir DISTDIR=$(DISTDIR)/tests

